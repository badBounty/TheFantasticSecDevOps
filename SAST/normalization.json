{
    "node_insecure_random_generator":"Insecure random generator",
    "generic_error_disclosure":"Inadequeate error handler",
    "helmet_header_nosniff":"Security HTTP Headers misconfiguration NoSniff",
    "helmet_header_frame_guard":"Security HTTP Headers misconfiguration X-Frame",
    "helmet_header_xss_filter":"Security HTTP Headers misconfiguration Anti-XSS",
    "helmet_header_hsts":"Security HTTP Headers misconfiguration HSTS",
    "helmet_header_referrer_policy": "Security HTTP Headers misconfiguration Referer",  

    "findsecbugs:HARD_CODE_PASSWORD": "Security - Hard coded password",
    "findsecbugs:SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING": "Security - Spring CSRF unrestricted RequestMapping",
    "findsecbugs:HARD_CODE_KEY": "Security - Hard coded key",
    "findsecbugs:URLCONNECTION_SSRF_FD": "Security - URLConnection Server-Side Request Forgery (SSRF) and File Disclosure",
    "findsecbugs:SQL_INJECTION_JPA": "Security - Potential SQL/JPQL Injection (JPA)",
    "findsecbugs:XSS_SERVLET": "Security - Potential XSS in Servlet",
    "findsecbugs:SQL_INJECTION": "Security - Potential SQL Injection",
    "findsecbugs:SQL_INJECTION_TURBINE": "Security - Potential SQL Injection with Turbine",
    "findsecbugs:SQL_INJECTION_HIBERNATE": "Security - Potential SQL/HQL Injection (Hibernate)",
    "findsecbugs:SQL_INJECTION_JDO": "Security - Potential SQL/JDOQL Injection (JDO)",
    
    "csharpsquid:S2077": "Formatting SQL queries is security-sensitive",
    "csharpsquid:S2068": "Hard-coded credentials are security-sensitive",
    
    "javascript:S2817": "Web SQL databases should not be used",
    
    "SEC0020": "Weak Session Timeout",
    "SEC0106": "SQL Injection: Dynamic LINQ Query",
    "SEC0107": "SQL Injection: ADO.NET",
    "SEC0108": "SQL Injection: Dynamic EF Query",
    "SEC0126": "SQL Injection: Dynamic NHibernate Query",
    "SEC0130": "Hard-Coded Credential",
    "SEC0131": "Hard-Coded Secret",
    "SCS0014": "Possible SQL injection in {1} argument passed to '{0}'",
    "SCS0020": "OleDb API: SQL injection possible in {1} argument passed to '{0}'",
    "SCS0025": "Odbc API: SQL injection possible in {1} argument passed to '{0}'",
    "SCS0026": "MsSQL Data Provider: SQL injection possible in {1} argument passed to '{0}'",
    "SCS0035": "Possible SQL injection in {1} argument passed to '{0}'",
    "SCS0036": "Possible SQL injection in {1} argument passed to '{0}'",
    "SCS0015": "Hardcoded password in {1} argument passed to '{0}'",
    
    "sandbox_code_injection": "Unrusted data in `sandbox` can result in code injection.",
    "vm2_code_injection": "Untrusted user input reaching `vm2` can result in code injection.",
    "vm2_context_injection": "Untrusted user input reaching `vm2` sandbox can result in context injection.",
    "vm_runincontext_injection": "Untrusted user input in `vm.runInContext()` can result in code injection.",
    "vm_runinnewcontext_injection": "Untrusted user input in `vm.runInNewContext()` can result in code injection.",
    "vm_compilefunction_injection": "Untrusted user input in `vm.compileFunction()` can result in code injection.",
    "vm_code_injection": "Untrusted user input reaching `vm` can result in code injection.",
    "hardcoded_passport_secret": "Hardcoded plain text secret used for Passport Strategy. Store it properly in an environment variable.",
    "node_password": "A hardcoded password in plain text is identified. Store it properly in an environment variable.",
    "node_secret": "A hardcoded secret is identified. Store it properly in an environment variable.",
    "node_username": "A hardcoded username in plain text is identified. Store it properly in an environment variable.",
    "node_api_key": "A hardcoded API Key is identified. Store it properly in an environment variable.",
    "generic_header_injection": "Untrusted user input in response header will result in HTTP Header Injection or Response Splitting Attacks.",
    "header_xss_lusca": "X-XSS-Protection header is set to 0. This will disable the browser's XSS Filter.",
    "header_xss_generic": "X-XSS-Protection header is set to 0. This will disable the browser's XSS Filter.",
    "hardcoded_jwt_secret": "Hardcoded JWT secret was found. Store it properly in an environment variable.",
    "node_nosqli_injection": "Untrusted user input in findOne() function can result in NoSQL Injection.",
    "node_nosqli_js_injection": "Untrusted user input in MongoDB $where operator can result in NoSQL JavaScript Injection.",
    "node_sqli_injection": "Untrusted input concatinated with raw SQL query can result in SQL Injection.",
    "node_ssrf": "User controlled URL in http client libraries can result in Server Side Request Forgery (SSRF).",
    "phantom_ssrf": "If unverified user data can reach the `phantom` methods it can result in Server-Side Request Forgery vulnerabilities.\n",
    "playwright_ssrf": "If unverified user data can reach the `puppeteer` methods it can result in Server-Side Request Forgery vulnerabilities.",
    "puppeteer_ssrf": "If unverified user data can reach the `puppeteer` methods it can result in Server-Side Request Forgery vulnerabilities.",
    "wkhtmltoimage_ssrf": "User controlled URL reached to `wkhtmltoimage` can result in Server Side Request Forgery (SSRF).",
    "wkhtmltopdf_ssrf": "User controlled URL reached to `wkhtmltopdf` can result in Server Side Request Forgery (SSRF).",
    "xss_disable_mustache_escape": "Markup escaping disabled. This can be used with some template engines to escape disabling of HTML entities, which can lead to XSS attacks.",
    "express_xss": "Untrusted User Input in Response will result in Reflected Cross Site Scripting Vulnerability.",
    "xss_serialize_javascript": "Untrusted user input reaching `serialize-javascript` with `unsafe` attribute can cause Cross Site Scripting (XSS)."
  }